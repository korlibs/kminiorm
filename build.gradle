buildscript {
    ext {
        kotlinVersion = '1.3.50'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

def publishUser = (rootProject.findProperty("BINTRAY_USER") ?: project.findProperty("bintrayUser") ?: System.getenv("BINTRAY_USER"))?.toString()
def publishPassword = (rootProject.findProperty("BINTRAY_KEY") ?: project.findProperty("bintrayApiKey") ?: System.getenv("BINTRAY_API_KEY") ?: System.getenv("BINTRAY_KEY"))?.toString()

if (publishUser == null || publishPassword == null) {
    println("Required BINTRAY_USER and BINTRAY_KEY in ~/.gradle/gradle.properties")
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'

    group = 'com.soywiz.kminiorm'
    sourceCompatibility = 1.8

    configure([compileKotlin, compileTestKotlin]) {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict", "-Xallow-kotlin-package"]
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")
        compile("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2")
        //compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7')
        testCompile("com.h2database:h2:1.4.199")
        testCompile("org.jetbrains.kotlin:kotlin-test-junit")
        testCompile("junit:junit:4.12")
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
    }


    publishing {
        repositories {
            maven {
                credentials {
                    username = publishUser
                    password = publishPassword
                }
                url = uri("https://api.bintray.com/maven/${project.property("project.bintray.org")}/${project.property("project.bintray.repository")}/${project.property("project.bintray.package")}/")
            }
        }
        publications {
            maven(MavenPublication) {
                groupId = project.group
                artifactId = project.name
                version = project.version

                from components.java
                artifact(sourcesJar)
                artifact(javadocJar)

                pom {
                    name = project.name
                    description = project.property("project.description")
                    url = project.property("project.scm.url")
                    licenses {
                        license {
                            name = project.property("project.license.name")
                            url = project.property("project.license.url")
                        }
                    }
                    scm {
                        url = project.property("project.scm.url")
                    }
                }
            }
        }
    }
}
